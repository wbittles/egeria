/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Contributors to the ODPi Egeria project.
 */


/*
 * Used for Build scripts/plugins only
*/

buildscript {
    repositories { 
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-aggregate-javadocs-plugin:3.0.1'
    } 
}

/*
 * Plugins for this parent module only - so just high level project related
 */

plugins {
        //id "nebula.lint" version "16.9.0"
        //id "nebula-aggregate-javadocs"
    }

/* run './gradlew aggregateJavadocs' at top level to build all docs & output to build/docs/javadoc */
apply plugin: 'nebula-aggregate-javadocs'




/*
 * Configuration for all projects - INCLUDING this one
 */

allprojects {

    group = 'org.odpi.egeria'
    version = '2.5-SNAPSHOT'

    apply plugin: 'java'


    // This enforces version checking but is slow to process
    //apply plugin: 'nebula.lint'
    //gradleLint {
    //    rules = ['all-dependency'] // TODO: Change to criticalRules when ready to enforce
    //
    //}


    //apply plugin: "io.spring.dependency-management"

    // Mostly java, so default to this for now
    apply plugin: 'java'

    // As we've migrated from maven - we'll assume all submodules publish directly to maven
    apply plugin: 'maven-publish'

    // In a few cases we need dependencies from outside the tree - mostly just hadoop binding (and the pom)
    // Use JCenter for performance, and our own official build snapshots for gaian/ranger/derby & main egeria BOM for version fixing
    repositories {
        jcenter()
        maven { url("https://odpi.jfrog.io/odpi/egeria-snapshot") }
        //mavenLocal()
        }

    /*
     * Dependency Management - to fix versions. Pick up maven build settings for now
     */
    dependencies {
        constraints {
            //implementation("com.ibm.gaiandb:gaian":"")
            implementation("ch.qos.logback:logback-classic:1.2.3")
            implementation("ch.qos.logback:logback-core:1.2.3")
            implementation("com.datastax.oss:java-driver-core:4.9.0")
            implementation("com.fasterxml.jackson.core:jackson-annotations:2.11.3")
            implementation("com.fasterxml.jackson.core:jackson-core:2.11.3")
            implementation("com.fasterxml.jackson.core:jackson-databind:2.11.3")
            implementation("com.fasterxml.jackson.core:jackson-datatype-jsr310:2.11.3")
            implementation("com.fasterxml:classmate:1.5.1")
            implementation("com.github.jsonld-java:jsonld-java:0.13.2")
            implementation("com.github.spotbugs:spotbugs-annotations:4.1.3")
            implementation("com.google.crypto.tink:tink:1.5.0")
            implementation("com.google.code.findbugs:jsr305:3.0.2")
            implementation("com.google.guava:guava:30.0-jre")
            implementation("com.h2database:h2:1.4.200")
            implementation("com.mikesamuel:json-sanitizer:1.2.1")
            implementation("com.sleepycat:je:18.3.12")
            implementation("commons-codec:commons-codec:1.15")
            implementation("commons-io:commons-io:2.8.0")
            implementation("commons-logging:commons-logging:1.2")
            implementation("io.github.classgraph:classgraph:4.8.90")
            implementation("io.jsonwebtoken:jjwt:0.9.1")
            implementation("io.micrometer:micrometer-registry-prometheus:1.6.4")
            implementation("io.netty:netty-all:4.1.53.Final")
            implementation("io.netty:netty-buffer:4.1.53.Final")
            implementation("io.netty:netty-codec:4.1.53.Final")
            implementation("io.netty:netty-common:4.1.53.Final")
            implementation("io.netty:netty-handler:4.1.53.Final")
            implementation("io.netty:netty-resolver:4.1.53.Final")
            implementation("io.netty:netty-transport:4.1.53.Final")
            implementation("io.swagger.core.v3:swagger-annotations:2.1.5")
            implementation("jakarta.annotation:jakarta.annotation-api:1.3.5")
            implementation("jakarta.persistence:jakarta.persistence-api:2.2.3")
            implementation("javax.validation:validation-api:2.0.1.Final")
            implementation("javax.xml.bind:jaxb-api:2.3.1")
            implementation("org.apache.avro:avro:1.10.0")
            implementation("org.apache.commons:commons-collections4:4.4")
            implementation("org.apache.commons:commons-lang3:3.11")
            implementation("org.apache.derby:derby:10.8.3.1")
            implementation("org.apache.hadoop:hadoop-common:2.9.2")
            implementation("org.apache.httpcomponents:httpclient:4.5.13")
            implementation("org.apache.httpcomponents:httpcore:4.4.13")
            implementation("org.apache.jena:jena-core:3.16.0")
            implementation("org.apache.kafka:kafka-clients:2.6.0")
            implementation("org.apache.lucene:lucene-analyzers-common:8.6.3")
            implementation("org.apache.lucene:lucene-core:8.6.3")
            implementation("org.apache.lucene:lucene-queryparser:8.6.3")
            implementation("org.apache.lucene:lucene-spatial:8.4.1")
            implementation("org.apache.lucene:lucene-spatial-extras:8.6.3")
            implementation("org.apache.ranger:ranger-plugins-common:1.2.0")
            implementation("org.apache.tinkerpop:gremlin-core:3.4.8")
            implementation("org.apache.tinkerpop:gremlin-driver:3.4.8")
            implementation("org.apache.tinkerpop:tinkergraph-gremlin:3.4.8")
            implementation("org.apache.tomcat.embed:tomcat-embed-core:9.0.39") //TODO May need to exclude tomcat-annotations-api
            implementation("org.codehaus.groovy:groovy:3.0.6")
            implementation("org.codehaus.groovy:groovy-cli-picocli:3.0.6")
            implementation("org.codehaus.groovy:groovy-console:3.0.6")
            implementation("org.codehaus.groovy:groovy-jsr223:3.0.6")
            implementation("org.codehaus.groovy:groovy-templates:3.0.6")
            implementation("org.codehaus.groovy:groovysh:3.0.6")
            implementation("org.codehaus.plexus:plexus-utils:3.3.0")
            implementation("org.elasticsearch:elasticsearch:7.9.3")
            implementation("org.hdrhistogram:HdrHistogram:2.1.12")
            implementation("org.janusgraph:janusgraph-core:0.5.2")
            implementation("org.janusgraph:janusgraph-driver:0.5.2")
            implementation("org.janusgraph:janusgraph-inmemory:0.5.2")
            implementation("org.javassist:3.27.0-GA")
            implementation("org.quartz-scheduler:quartz:2.3.2")
            implementation("org.reflections:reflections:0.9.12")
            implementation("org.slf4j:jcl-over-slf4j:1.7.30")
            implementation("org.slf4j:slf4j-api:1.7.30")
            implementation("org.springdoc:springdoc-openapi-ui:1.4.6")
            implementation("org.springframework.boot:spring-boot:2.3.3.RELEASE")
            implementation("org.springframework.boot:spring-boot-autoconfigure:2.3.3.RELEASE")
            implementation("org.springframework.boot:spring-boot-starter-actuator:2.3.3.RELEASE")
            implementation("org.springframework.boot:spring-boot-starter-data-jpa:2.3.3.RELEASE")
            implementation("org.springframework.boot:spring-boot-starter-security:2.3.3.RELEASE")
            implementation("org.springframework.boot:spring-boot-starter-validation:2.3.3.RELEASE")
            implementation("org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE")
            implementation("org.springframework.cloud:spring-cloud-starter-netflix-zuul:2.2.5.RELEASE")
            implementation("org.springframework.data:spring-data-commons:2.4.0")
            implementation("org.springframework.data:spring-data-jpa:2.4.0")
            implementation("org.springframework.security:spring-security-config:5.4.1")
            implementation("org.springframework.security:spring-security-core:5.4.1")
            implementation("org.springframework.security:spring-security-ldap:5.4.1")
            implementation("org.springframework.security:spring-security-web:5.4.1")
            implementation("org.springframework:spring-aop:5.3.0")
            implementation("org.springframework:spring-beans:5.3.0")
            implementation("org.springframework:spring-context:5.3.0")
            implementation("org.springframework:spring-core:5.3.0")
            implementation("org.springframework:spring-expression:5.3.0")
            implementation("org.springframework:spring-jdbc:5.3.0")
            implementation("org.springframework:spring-test:5.3.0")
            implementation("org.springframework:spring-tx:5.3.0")
            implementation("org.springframework:spring-web:5.3.0")
            implementation("org.springframework:spring-webmvc:5.3.0")
            // testng also used in our 'source' code to support unit tests
            implementation("org.testng:testng:7.3.0")
            implementation("org.yaml:snakeyaml:1.27")
            runtimeOnly("joda-time:joda-time:2.10.8")
            runtimeOnly("org.antlr:antlr-runtime:3.5.2")
            runtimeOnly("org.apache.jena:jena-arq:3.16.0")
            runtimeOnly("org.codehaus.jackson:jackson-core-asl:1.9.13")
            runtimeOnly("org.codehaus.jackson:jackson-mapper-asl:1.9.13-atlassian-2")
            runtimeOnly("org.janusgraph:janusgraph-berkeleyje:0.5.2")
            runtimeOnly("org.janusgraph:janusgraph-cassandra:0.5.2")
            runtimeOnly("org.janusgraph:janusgraph-cql:0.5.2")
            runtimeOnly("org.janusgraph:janusgraph-es:0.5.2")
            runtimeOnly("org.janusgraph:janusgraph-lucene:0.5.2")
            runtimeOnly("org.xerial.snappy:snappy-java:1.1.8")
            testImplementation("junit:junit:4.13.1")
            testImplementation("org.glassfish:javax.json:1.1.4")
            testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
            testImplementation("org.junit.jupiter:junit-jupiter-engine:5.7.0")
            testImplementation("org.junit.jupiter:junit-platform-runner:1.7.0")
            testImplementation("org.junit.jupiter:junit-platform-suite-api:1.7.0")
            testImplementation("org.mockito:mockito-core:3.6.0")
            testImplementation("org.mockito:mockito-inline:3.6.0")
            testImplementation("org.mockito:mockito-junit-jupiter:3.6.0")
            testImplementation("org.slf4j:slf4j-simple:1.7.30")
            testImplementation("org.testng:testng:7.3.0")
            testImplementation("org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE")

        }
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }

}

/*
 * Configuration for sub projects only
 */

subprojects {
}
